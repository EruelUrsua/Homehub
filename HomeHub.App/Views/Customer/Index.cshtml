@model CHomeViewModel
@{
    ViewData["Title"] = "Home Page";
}
<body style="background-color:#F1F1F1; margin: 0; padding: 0; width: 100vw; overflow-x: hidden;">

    <div class="container-fluid bg-dark text-white text-center py-5">
        <h1>Welcome to HomeHub</h1>
        <p class="lead">Find the best products and services for your needs.</p>
    </div>

    <div class="container-fluid my-4">
        <div class="row w-100 text-center d-flex justify-content-center">
            <div class="col-md-3 px-2">
                <a asp-action="OrderProduct">
                    <button class="btn btn-primary btn-lg w-100">Order Products</button>
                </a>
            </div>
            <div class="col-md-3 px-2">
                <a asp-action="AvailService">
                    <button class="btn btn-success btn-lg w-100">Avail Services</button>
                </a>
            </div>
            <div class="col-md-3 px-2">
                <a asp-action="ViewOrders">
                    <button class="btn btn-warning btn-lg w-100">View Orders</button>
                </a>
            </div>
        </div>
    </div>

    <div class="container mt-5">
        <h2 class="text-center mb-4">Featured Products</h2>
        <div class="row">
            @if (ViewBag.Products != null && ViewBag.Products.Count > 0)
            {
                foreach (var product in ViewBag.Products)
                {
                    <div class="col-lg-3 col-md-4 col-sm-6 mb-4">
                        <div class="card h-100 shadow-sm">
                            <img src="@product.ProductImagePath" class="card-img-top" alt="@product.ProductItem" style="height: 200px; object-fit: cover;">
                            <div class="card-body">
                                <h5 class="card-title">@product.ProductItem</h5>
                                <p class="card-text text-muted">by @product.BusinessName</p>
                                <p class="text-primary fw-bold">Php @product.Price.ToString("0.00")</p>
                            </div>
                            <div class="card-footer text-center">
                                <a asp-action="OrderListProduct" asp-route-businessId="@product.UserID" class="btn btn-primary w-100">Order Now</a>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <p class="text-center">No products available at the moment.</p>
            }
        </div>

        <!-- Pagination Controls -->
        <div class="d-flex justify-content-between mt-4">
            @if (ViewBag.CurrentPage > 1)
            {
                <a href="@Url.Action("Index", new { productPage = ViewBag.CurrentPage - 1 })" class="btn btn-outline-primary pagination-link">
                    ← Previous
                </a>
            }
            else
            {
                <button class="btn btn-outline-secondary" disabled>← Previous</button>
            }

            <span>Page @ViewBag.CurrentPage of @ViewBag.TotalPages</span>

            @if (ViewBag.CurrentPage < ViewBag.TotalPages)
            {
                <a href="@Url.Action("Index", new { productPage = ViewBag.CurrentPage + 1 })" class="btn btn-outline-primary pagination-link">
                    Next →
                </a>
            }
            else
            {
                <button class="btn btn-outline-secondary" disabled>Next →</button>
            }
        </div>
    </div>

    <div class="container-fluid mt-5">
        <div class="row w-100">
            <div class="col-md-6">
                <h3 class="mb-3 text-primary">Recommendations for You</h3>
                <div class="card shadow-sm p-3">
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Business Name</th>
                                    <th>Category</th>
                                    <th>Business Type</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (ViewBag.Providers != null && ViewBag.Providers.Count > 0)
                                {
                                    foreach (var providers in ViewBag.Providers)
                                    {
                                        <tr>
                                            <td>@providers.BusinesName</td>
                                            <td>@providers.Category</td>
                                            <td>@providers.BusinessType</td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="3">No recommendations available</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        @* This is the Map Script do not touch! *@
                        @* <script src="~/lib/leaflet/leaflet.js"></script> *@
                        @* <script src="~ /lib/leaflet/leaflet.min.js"></script> *@
                        @* <a href="~/lib/leaflet/leaflet.js.map"></a> *@
                        @* <div id="map" style="width:100%;height:400px"></div> *@
                        @* <script> *@
                        @*     var map = L.map('map').setView([14.58699, 120.98634], 15); *@
                        @*         L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', { *@
                        @*         attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors' *@
                        @*         }).addTo(map); *@

                        @*         var jsModel = @Html.Raw(Json.Serialize(Model)); *@
                        @*         console.log(jsModel) *@

                        @*         for (i in jsModel) *@
                        @*         {item = jsModel [i] *@
                        @*              L.marker([item.lat, item.long]).addTo(map) *@
                        @*           .bindPopup(item.name + '<br>' + item.address); *@

                        @*         } *@
                        @* </script> *@
                    </div>
                </div>
            </div>

            <!-- Ongoing Promos Section -->
            <div class="col-md-6">
                <h3 class="mb-3 text-warning">Ongoing Promos</h3>
                <div class="card shadow-sm p-3 bg-secondary text-white">
                    @if (ViewBag.Promos != null && ViewBag.Promos.Count > 0)
                    {
                        var currentPromo = ViewBag.Promos[ViewBag.CurrentPromoIndex];
                        <div class="promo-item">
                            <h4>Code: <strong>@currentPromo.PromoCode</strong></h4>
                            <p>@currentPromo.PromoName</p>
                            <p>Ends on: @currentPromo.PromoEnd.ToString("yyyy-MM-dd")</p>
                        </div>
                    }
                    else
                    {
                        <p class="text-center">No ongoing promos at the moment.</p>
                    }

                    <!-- Promo Navigation -->
                    <div class="d-flex justify-content-between mt-3">
                        @if (ViewBag.Promos != null && ViewBag.Promos.Count > 0)
                        {
                            var prevPromoIndex = (ViewBag.CurrentPromoIndex - 1 + ViewBag.Promos.Count) % ViewBag.Promos.Count;
                            <a href="@Url.Action("Index", new { promoIndex = prevPromoIndex })">
                                <button class="btn btn-outline-light">Previous</button>
                            </a>

                            var nextPromoIndex = (ViewBag.CurrentPromoIndex + 1) % ViewBag.Promos.Count;
                            <a href="@Url.Action("Index", new { promoIndex = nextPromoIndex })">
                                <button class="btn btn-outline-light">Next</button>
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Restore the scroll position when the page loads
            if (sessionStorage.getItem("scrollPosition") !== null) {
            window.scrollTo(0, sessionStorage.getItem("scrollPosition"));
            }

            // Save scroll position when user clicks pagination links
            document.querySelectorAll(".pagination-link").forEach(link => {
            link.addEventListener("click", function () {
                sessionStorage.setItem("scrollPosition", window.scrollY);
            });
            });
        });
    </script>
</body>
