@using System.Linq;
@using System.Collections.Generic;
@using Microsoft.AspNetCore.Mvc.Rendering;

@{
    ViewData["Title"] = "Choose where to order";
}

<body>
    <div class="container py-5">
        <div class="header-section">
            <h1 class="primary-heading text-white">Choose where to order</h1>
            <p class="text-white">Find the best product providers for your needs!</p>
        </div>

        <div class="row justify-content-center">
            <div class="col-md-4">
                <label for="categoryFilter" class="form-label fw-semibold">Filter by Category</label>
                <select name="category" id="categoryFilter" class="form-select">
                    <option value="All">All</option>
                    @foreach (var category in ViewBag.Categories)
                    {
                        <option value="@category">@category</option>
                    }
                </select>
            </div>
            <div class="col-md-4">
                <label for="filter" class="form-label fw-semibold">Sort By</label>
                <select name="filter" id="filter" class="form-select">
                    <option value="byName">By Name (A-Z)</option>
                    <option value="byPrice">By Price (Low to High)</option>
                </select>
            </div>
        </div>

        <div class="row mt-4" id="businessList">
            @if (ViewBag.Businesses.Count < 1)
            {
                <div class="alert alert-info text-center">
                    No Businesses Found
                </div>
            }
            else
            {
                @foreach (var item in ViewBag.Businesses)
                {
                    <div class="col-md-4 mb-3 business-card"
                         data-category="@item.Category"
                         data-price="@item.AvgPrice"
                         data-name="@item.BusinessName">
                        <div class="card border-0 shadow-sm rounded-3" style="background-color: #f8f9fa; transition: transform 0.2s;">
                            <div class="card-header fw-bold primary-heading">
                                @item.BusinessName
                            </div>
                            <div class="card-body">
                                <p class="card-text text-muted">
                                    <i class="bi bi-geo-alt-fill text-danger"></i> @item.Address <br>
                                    <i class="bi bi-telephone-fill text-success"></i> @item.PhoneNumber
                                </p>
                                <span class="badge bg-primary">@item.Category</span>
                            </div>
                            <div class="card-footer bg-light text-end">
                                <form asp-controller="Customer" asp-action="OrderListProduct">
                                    <input type="hidden" name="businessId" value="@item.UserID" />
                                    <input type="submit" class="btn btn-success" value="Choose Provider" />
                                </form>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
           var categoryFilter = document.getElementById('categoryFilter');
            var sortFilter = document.getElementById('filter');
            var businessList = document.getElementById('businessList');
            var businesses = Array.from(document.getElementsByClassName('business-card'));

            function filterAndSort() {
                var selectedCategory = categoryFilter.value;
                var selectedSort = sortFilter.value;

                //Filter by Category
                businesses.forEach(business => {
                    const category = business.getAttribute('data-category');
                    if (selectedCategory === 'All' || category === selectedCategory) {
                        business.style.display = '';
                    } else {
                        business.style.display = 'none';
                    }
                });

                //Sort by Name or Price
                var sortedBusinesses = businesses.filter(b => b.style.display !== 'none').sort((a, b) => {
                    if (selectedSort === 'byName') {
                        return a.getAttribute('data-name').localeCompare(b.getAttribute('data-name'));
                    } else if (selectedSort === 'byPrice') {
                        return parseFloat(a.getAttribute('data-price')) - parseFloat(b.getAttribute('data-price'));
                    }
                });

                //Reorder elements in the DOM
                sortedBusinesses.forEach(b => businessList.appendChild(b));
            }

                categoryFilter.addEventListener('change', filterAndSort);
                sortFilter.addEventListener('change', filterAndSort);

                filterAndSort();
        });
    </script>
</body>

<style>
    .header-section {
        background-color: #203B81;
        color: white;
        padding: 30px;
        text-align: center;
        border-radius: 8px;
        margin-top: 0;
        margin-bottom: 10px;
    }

    .primary-heading {
        color: #203B81;
        font-weight: bold;
    }

    .card-header {
        background-color: #eef5ff !important;
    }

    .card:hover {
        transform: scale(1.03);
    }
</style>