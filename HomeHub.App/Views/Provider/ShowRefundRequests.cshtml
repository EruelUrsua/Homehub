@model IEnumerable<HomeHub.DataModel.RefundRequest>

<h2>Refund Requests for Your Business</h2>

<table class="table">
    <thead>
        <tr>
            <th>Order ID</th>
            <th>Item</th>
            <th>Quantity</th>
            <th>Fee</th>
            <th>Promo Code</th>
            <th>Refund Amount</th>
            <th>Status</th>
            <th>Refund Reason</th>
            <th>Request Date</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var refundRequest in Model)
        {
            <tr>
                <td>@refundRequest.OrderId</td>
                <td>@refundRequest.Item</td>
                <td>@refundRequest.RefundQuantity</td>
                <td>₱@refundRequest.Fee.ToString("N2")</td>
                <td>@refundRequest.PromoCode</td>
                <td>
                    @if (refundRequest.PromoCode != null)
                    {
                        <span>₱@(refundRequest.RefundAmount.HasValue ? refundRequest.RefundAmount.Value.ToString("N2") : "0.00")</span>
                    }
                    else
                    {
                        <span>₱@refundRequest.Fee.ToString("N2")</span>
                    }
                </td>
                <td>@refundRequest.RefundStatus</td>
                <td>@refundRequest.RefundReason</td>
                <td>@refundRequest.RefundRequestDate.ToShortDateString()</td>
                <td>
                    @if (refundRequest.RefundStatus == "Pending")
                    {
                        @* Accept Refund *@
                        @using (Html.BeginForm("AcceptRefund", "Provider", FormMethod.Post, new { @class = "refund-form" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.Hidden("refundId", refundRequest.RefundId) @* Use RefundId instead of OrderId *@
                            <button type="submit" class="btn btn-success mt-2">Accept</button>
                        }

                        @* Reject Refund *@
                        @using (Html.BeginForm("RejectRefund", "Provider", FormMethod.Post, new { @class = "refund-form" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.Hidden("refundId", refundRequest.RefundId)
                            <button type="submit" class="btn btn-danger mt-2">Reject</button>
                        }
                    }
                    else if (refundRequest.RefundStatus == "Refund Accepted")
                    {
                        <span class="text-success">Refund Accepted</span>    
                    }
                    else
                    {
                        <span class="text-muted">No actions available</span>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@* Show a message if there are no refund requests *@
@if (ViewBag.NoRefundRequests != null)
{
    <div class="alert alert-warning">
        @ViewBag.NoRefundRequests
    </div>
}
